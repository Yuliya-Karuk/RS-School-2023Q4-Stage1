var l=Object.defineProperty;var g=(o,t,r)=>t in o?l(o,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[t]=r;var n=(o,t,r)=>(g(o,typeof t!="symbol"?t+"":t,r),r);import{d as h}from"./index-9POz6T_7.js";function u(o){return Object.entries(o).map(([r,s])=>`&${r}=${s}`).join("").slice(1)}function a(o,t){const r=o.join("/");let s="";return t&&(s=u(t)),`${r}?${s}`}const p="http://localhost:3000";class w{constructor(){n(this,"garageEndpoint","garage");n(this,"engineEndpoint","engine");n(this,"carsPerPage","7");n(this,"baseUrl",p);n(this,"carsTotal")}async getCars(t){const r={_page:t.toString(),_limit:this.carsPerPage},s=a([this.baseUrl,this.garageEndpoint],r);try{const e=await fetch(s,{method:"GET"}),i=await e.json();return this.carsTotal=Number(e.headers.get("X-Total-Count")),i}catch{throw Error("Error")}}async getCar(t){const r=a([this.baseUrl,this.garageEndpoint,String(t)]);try{return await(await fetch(r)).json()}catch{throw Error("NOT FOUND")}}async createCar(t){const r=a([this.baseUrl,this.garageEndpoint]);try{return await(await fetch(r,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t)})).json()}catch{throw Error("Error")}}async updateCar(t,r){const s=a([this.baseUrl,this.garageEndpoint,String(t)]);try{return await(await fetch(s,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)})).json()}catch{throw Error("NOT FOUND")}}async deleteCar(t){const r=a([this.baseUrl,this.garageEndpoint,String(t)]);try{return await fetch(r,{method:"DELETE"})}catch{throw Error("NOT FOUND")}}async startCarEngine(t){const r={id:t.toString(),status:"started"},s=a([this.baseUrl,this.engineEndpoint],r);try{return await(await fetch(s,{method:"PATCH"})).json()}catch{throw Error("NOT FOUND")}}async driveCar(t){const r={id:t.toString(),status:"drive"},s=a([this.baseUrl,this.engineEndpoint],r);return(await fetch(s,{method:"PATCH"})).status!==500}async stopCar(t){const r={id:t.toString(),status:"stopped"},s=a([this.baseUrl,this.engineEndpoint],r);try{return await fetch(s,{method:"PATCH"})}catch{throw Error("NOT FOUND")}}}const f=new w;class E{constructor(){n(this,"winnersEndpoint","winners");n(this,"winnersPerPage","10");n(this,"baseUrl",p);n(this,"winnersTotal")}async getWinners(t,r="time",s="ASC"){const e={_page:t.toString(),_limit:this.winnersPerPage,_sort:r,_order:s},i=a([this.baseUrl,this.winnersEndpoint],e);try{const c=await fetch(i,{method:"GET"}),d=await c.json();return this.winnersTotal=Number(c.headers.get("X-Total-Count")),d}catch{throw Error("Error")}}async getWinner(t){const r=a([this.baseUrl,this.winnersEndpoint,String(t)]),s=await fetch(r);return s.status===404?null:await s.json()}async updateWinner(t,r){const s=a([this.baseUrl,this.winnersEndpoint,String(t)]);return await(await fetch(s,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)})).json()}async createWinner(t){const r=a([this.baseUrl,this.winnersEndpoint]);return await(await fetch(r,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t)})).json()}async deleteWinner(t){const r=a([this.baseUrl,this.winnersEndpoint,String(t)]);try{return await fetch(r,{method:"DELETE"})}catch{throw Error("Error")}}}const T=new E,m="car-svg",y="winners",C={"car-svg":"car-svg",carSvg:m,winners:y};class N{constructor(t,r){n(this,"svgNamespace","http://www.w3.org/2000/svg");n(this,"useNamespace","http://www.w3.org/1999/xlink");n(this,"spritePath","./sprite/sprite.svg");n(this,"svg");const s=r%7;this.svg=h(SVGElement,document.createElementNS(this.svgNamespace,"svg"));const e=h(SVGUseElement,document.createElementNS(this.svgNamespace,"use"));e.setAttributeNS(this.useNamespace,"xlink:href",`${this.spritePath}#car${s}`),this.svg.classList.add(C.carSvg),this.setColor(t),this.svg.append(e)}getNode(){return this.svg}setColor(t){this.svg.style.fill=t}}export{f as C,N as S,T as W};
